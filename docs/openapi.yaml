openapi: 3.0.3
info:
  title: Topic API
  version: 3.0.1
paths:
  /api/topic:
    get:
      description: List all topics by Name and ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopicIdentifiers'
    post:
      description: Create a new Topic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Topic'
      responses:
        '201':
          $ref: '#/components/responses/Topic'
  /api/topic/{id}:
    get:
      description: Return a Topic by ID
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          $ref: '#/components/responses/Topic'
    patch:
      description: Update a Topic by ID
      parameters:
        - $ref: '#/components/parameters/Id'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/TopicIdentifiers'
                - $ref: '#/components/schemas/TopicProperties'
      responses:
        '200':
          $ref: '#/components/responses/Topic'
  /api/topic/{id}/resource:
    post:
      description: Add a resource to a topic
      parameters:
        - $ref: '#/components/parameters/Id'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Resource'
      responses:
        '200':
          $ref: '#/components/responses/Topic'
  /api/topic/{id}/resource/{name}:
    patch:
      description: Update a resource on a topic
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Name'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Resource'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
    delete:
      description: Remove a resource from a Topic
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Name'
      responses:
        '200':
          description: OK
  /api/path/{pathname}:
    get:
      parameters:
        - $ref: '#/components/parameters/PathName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Path'
    patch:
      parameters:
        - $ref: '#/components/parameters/PathName'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Path'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Path'
  /api/health:
    get:
      responses:
        '200':
          description: OK
  /api/config:
    get:
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
components:
  responses:
    Topic:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Topic'
  parameters:
    Id:
      name: id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/TopicIdentifiers/properties/_id'
    Name:
      name: name
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/TopicIdentifiers/properties/name'
    PathName:
      name: pathname
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/Path/properties/name'
  schemas:
    TopicIdentifiers:
      type: object
      properties:
        _id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 128
    TopicProperties:
      type: object
      description: Conforms to Topics Schema version 2.0.3
      properties:
        status:
          type: string
          enum:
            - Active
            - Archived
        description:
          type: string
          maxLength: 512
        category:
          type: string
          enum:
            - Foundations of ITSM
            - Design and Development
            - Infrastructure and Operations
            - Networking and Security
            - Development Tools and Practices
            - Data Management
            - Continuous Integration and Deployment
            - Monitoring and Performance
        skills:
          type: array
          items:
            $ref: '#/components/schemas/Skill'
    TopicResources:
      properties:
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource'
    Topic:
      required:
        - Name
      allOf:
        - $ref: '#/components/schemas/TopicIdentifiers'
        - $ref: '#/components/schemas/TopicProperties'
        - $ref: '#/components/schemas/TopicResources'
    Resource:
      type: object
      description: Conforms to Resources Schema version 1.0.2
      properties:
        name:
          type: string
          maxLength: 64
        status:
          type: string
          enum:
            - Active
            - Archived
        description:
          type: string
          maxLength: 512
        duration:
          type: integer
          minimum: 1
          maximum: 2880
        link:
          type: string
          maxLength: 256
          pattern: ^https:\/\/([a-zA-Z0-9-]{1,63}\.)+[a-zA-Z-]{2,24}(:[0-9]{1,5})?(\/(([\w\-\.~]|%[a-fA-F0-9]{2}|[!\$&'\(\)\*\+,;=:@])*\/?)*)?
        skills:
          type: array
          items:
            $ref: '#/components/schemas/Skill'
        tags:
          type: array
          items:
            type: string
            enum:
              - $
              - Article
              - Book
              - Exam
              - Interactive
              - Lecture
              - Lesson
              - Reference
              - Tutorial
              - User Guide
              - Video
              - UI/UX
              - API
              - Data
              - SRE
    Skill:
      type: object
      description: Conforms to Skills Schema version 1.0.2
      properties:
        name:
          type: string
          maxLength: 32
        status:
          type: string
          enum:
            - Active
            - Archived
        description:
          type: string
          maxLength: 256
        mastery:
          type: string
          enum:
            - Candidate
            - Apprentice
            - Resident
            - Master
            - Distinguished
        speciality:
          type: string
          enum:
            - Generalist
            - UI/UX Engineer
            - API Engineer
            - Data Engineer
            - SRE Engineer
    Path:
      type: object
      description: Conforms to Path Schema 1.0.0
      properties:
        status:
          type: string
          enum:
            - Active
            - Archived
        name:
          type: string
          maxLength: 64
        segments:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                maxLength: 64
              topics:
                type: array
                items:
                  type: string
    Config:
      type: object
      properties:
        apiVersion:
          type: string
          description: Semantic Version Number
        Stores:
          type: array
          items:
            type: object
            properties:
              CollectionName:
                description: Mongodb Collection name
                type: string
              Version:
                description: Schema Version for the collection
                type: string
              Filter:
                description: special Filter applied to collection
                type: string
        ConfigItems:
          type: array
          items:
            type: object
            properties:
              name:
                description: Conf Item Name (Env Var Name, File Name)
                type: string
              value:
                description: The value for that config item
                type: string
              from:
                description: Where the value was found
                type: string
                enum:
                  - default
                  - environment
                  - file
        enums:
          type: object
